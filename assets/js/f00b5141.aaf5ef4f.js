"use strict";(self.webpackChunkckb_sdk=self.webpackChunkckb_sdk||[]).push([[8396],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},k={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=s(n),d=o,u=m["".concat(p,".").concat(d)]||m[d]||k[d]||a;return n?r.createElement(u,l(l({ref:t},c),{},{components:n})):r.createElement(u,l({ref:t},c))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var s=2;s<a;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6510:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>k,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var r=n(7462),o=(n(7294),n(3905));n(4996);const a={id:"connectionInfo",title:"Godwoken Public Networks"},l=void 0,i={unversionedId:"connectionInfo",id:"version-1.2-rc1(WIP)/connectionInfo",title:"Godwoken Public Networks",description:"GODWOKEN L2 MAINNET V1\uff1a",source:"@site/versioned_docs/version-1.2-rc1(WIP)/connectionInfo.md",sourceDirName:".",slug:"/connectionInfo",permalink:"/connectionInfo",draft:!1,tags:[],version:"1.2-rc1(WIP)",frontMatter:{id:"connectionInfo",title:"Godwoken Public Networks"},sidebar:"sidebar2",previous:{title:"Overview",permalink:"/overview"},next:{title:"Frameworks",permalink:"/frameworks"}},p={},s=[{value:"GODWOKEN L2 MAINNET V1\uff1a",id:"godwoken-l2-mainnet-v1",level:2},{value:"Godwoken Web3 RPC",id:"godwoken-web3-rpc",level:3},{value:"Tools",id:"tools",level:3},{value:"Deployment Information",id:"deployment-information",level:3},{value:"Run a Godwoken mainnet_v1 readonly node",id:"run-a-godwoken-mainnet_v1-readonly-node",level:3},{value:"GODWOKEN L2 TESTNET:",id:"godwoken-l2-testnet",level:2},{value:"Nervos L1 Mainnet Mirana:",id:"nervos-l1-mainnet-mirana",level:2},{value:"<strong>NERVOS L1 TESTNET:</strong>",id:"nervos-l1-testnet",level:2}],c={toc:s};function k(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"godwoken-l2-mainnet-v1"},"GODWOKEN L2 MAINNET V1\uff1a"),(0,o.kt)("h3",{id:"godwoken-web3-rpc"},"Godwoken Web3 RPC"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"RPC URL"),": ",(0,o.kt)("a",{parentName:"li",href:"https://v1.mainnet.godwoken.io/rpc"},"https://v1.mainnet.godwoken.io/rpc")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"WebSocket"),": wss://v1.mainnet.godwoken.io/ws")),(0,o.kt)("h3",{id:"tools"},"Tools"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Explorer (GwScan)"),": ",(0,o.kt)("a",{parentName:"li",href:"https://v1.gwscan.com"},"https://v1.gwscan.com")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Token Bridge"),": ",(0,o.kt)("a",{parentName:"li",href:"https://mainnet.bridge.godwoken.io"},"https://mainnet.bridge.godwoken.io"))),(0,o.kt)("h3",{id:"deployment-information"},"Deployment Information"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Chain ID"),": 71402")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},' curl -X POST \'https://v1.mainnet.godwoken.io/rpc\' \\\n   -H "Content-Type: application/json" \\\n   -d \'{"jsonrpc":"2.0","method":"eth_chainId","params": [],"id":1}\'\n\n # Result\n # {"jsonrpc":"2.0","id":1,"result":"0x116ea"}\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"ETH Address Registry ID"),": 2"),(0,o.kt)("blockquote",{parentName:"li"},(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("inlineCode",{parentName:"p"},"ETH Address Registry")," layer2 ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/nervosnetwork/godwoken-scripts/blob/master/c/contracts/eth_addr_reg.c"},"contract")," introduces two-ways mappings between ",(0,o.kt)("inlineCode",{parentName:"p"},"eth_address")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"gw_script_hash"),"."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"https://github.com/nervosnetwork/godwoken-info/blob/mainnet_v1/mainnet_v1/bridged-token-list.json"},"sUDT_ERC20_Proxy contracts")))),(0,o.kt)("h3",{id:"run-a-godwoken-mainnet_v1-readonly-node"},"Run a Godwoken mainnet_v1 readonly node"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/nervosnetwork/godwoken-info/blob/mainnet_v1/mainnet_v1/gw-mainnet_v1-config-readonly.toml"},"Godwoken readonly node config"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"$ cd mainnet_v1\n# Note: It is better to run your own CKB mainnet node first.\n# see: https://docs.nervos.org/docs/basics/guides/run-ckb-with-docker/#run-a-ckb-mainnet-node\n$ docker-compose up -d gw-readonly\n")),(0,o.kt)("h2",{id:"godwoken-l2-testnet"},"GODWOKEN L2 TESTNET:"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"RPC url"),":\xa0",(0,o.kt)("a",{parentName:"p",href:"https://godwoken-testnet-v1.ckbapp.dev/"},"https://godwoken-testnet-v1.ckbapp.dev")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Chain ID:"),"\xa071401 (or 0x116e9)"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"L2 Godwoken Testnet explorer:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://v1.betanet.gwscan.com/"},"https://v1.betanet.gwscan.com")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://gw-explorer.nervosdao.community/"},"https://gw-explorer.nervosdao.community"),"\xa0(Blockscout)")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"L2 Godwoken Testnet Account Generator:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://testnet.bridge.godwoken.io/"},"https://testnet.bridge.godwoken.io"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"L2 Godwoken Testnet pCKB Contract")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Address: 0xE05d380839f32bC12Fb690aa6FE26B00Bd982613"),(0,o.kt)("li",{parentName:"ul"},"Symbol: pCKB"),(0,o.kt)("li",{parentName:"ul"},"Decimals: 18")),(0,o.kt)("h2",{id:"nervos-l1-mainnet-mirana"},"Nervos L1 Mainnet Mirana:"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"L1 Mainnet explorer:")," ",(0,o.kt)("a",{parentName:"p",href:"https://explorer.nervos.org"},"https://explorer.nervos.org")),(0,o.kt)("p",null,"Use the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/nervosnetwork/ckb/releases/latest"},"latest release")," and run ",(0,o.kt)("inlineCode",{parentName:"p"},"ckb init --chain mainnet")," to initialize the node."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Mirana is active since the epoch 5414, see the ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/jordanmack/nervos-ckb2021-hard-fork-migration-guide"},"migration guide")," to upgrade from Lina.")),(0,o.kt)("h2",{id:"nervos-l1-testnet"},(0,o.kt)("strong",{parentName:"h2"},"NERVOS L1 TESTNET:")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"L1 Testnet explorer:"),"\xa0",(0,o.kt)("a",{parentName:"p",href:"https://pudge.explorer.nervos.org/"},"https://pudge.explorer.nervos.org/")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"L1 Testnet faucet:"),"\xa0",(0,o.kt)("a",{parentName:"p",href:"https://faucet.nervos.org/"},"https://faucet.nervos.org/")))}k.isMDXComponent=!0}}]);